//! SeaORM Entity. Generated by sea-orm-codegen 0.9.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel)]
#[sea_orm(table_name = "auction")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub category_id: i32,
    pub category_name: String,
    pub name: String,
    pub buy_it_now_price: Decimal,
    pub buy_it_now_old_price: Decimal,
    pub product_id: i32,
    pub one_per_user: bool,
    pub is_dummy_auction_for_search: bool,
    pub no_re_entry: bool,
    pub no_jumper_limit: Decimal,
    pub exchangeable: bool,
    pub start_time: DateTime,
    pub estimated_total_cost: Option<Decimal>,
    pub bids_placed_by_winner: Option<String>,
    pub price_after_promo_discount: Option<Decimal>,
    pub percent_off_promo: Option<String>,
    pub percent_off: Option<i32>,
    pub is_bindolence: Option<bool>,
    pub penny_started_recording: Option<bool>,
    pub penny_recorded_full: Option<bool>,
    pub auction_end: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::bid::Entity")]
    Bid,
}

impl Related<super::bid::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bid.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
